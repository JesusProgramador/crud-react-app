{"version":3,"sources":["firebase.js","components/LinkForm.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinkForm","addOrEditLink","currentId","initialValues","links","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","className","onSubmit","preventDefault","onChange","type","placeholder","rows","Links","setLinks","setCurrentId","linkObject","set","toast","update","console","error","onDeleteLink","window","confirm","delete","autoClose","getLinks","onSnapshot","querySnapshot","docs","forEach","push","map","link","onClick","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92080882.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBv1cbomjJWjqq8uiwJL62xKw2aBbdwFx4\",\r\n    authDomain: \"fb-crud-react-c4556.firebaseapp.com\",\r\n    projectId: \"fb-crud-react-c4556\",\r\n    storageBucket: \"fb-crud-react-c4556.appspot.com\",\r\n    messagingSenderId: \"514212324427\",\r\n    appId: \"1:514212324427:web:51168ef52d4ccceef9d9ce\",\r\n};\r\n// Initialize Firebase\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = fb.firestore();","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst LinkForm = ({ addOrEditLink, currentId, links }) => {\r\n  const initialValues = {\r\n    url: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addOrEditLink(values);\r\n    setValues({ ...initialValues });\r\n  };\r\n\r\n  const getLinkById = async (id) => {\r\n    const doc = await db.collection(\"links\").doc(id).get();\r\n    setValues({ ...doc.data() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentId === \"\") {\r\n      setValues({ ...initialValues });\r\n    } else {\r\n      getLinkById(currentId);\r\n    }\r\n  }, [currentId]);\r\n\r\n  return (\r\n    <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group input-group p-2\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">insert_link</i>\r\n        </div>\r\n        <input\r\n          onChange={handleInputChange}\r\n          value={values.url}\r\n          type=\"text\"\r\n          className=\"form-control text-light\"\r\n          placeholder=\"https://someurl.com\"\r\n          name=\"url\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group input-group p-2\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">create</i>\r\n        </div>\r\n\r\n        <input\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          value={values.name}\r\n          className=\"form-control text-light\"\r\n          name=\"name\"\r\n          placeholder=\"Website name\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group p-2\">\r\n        <textarea\r\n          onChange={handleInputChange}\r\n          name=\"description\"\r\n          rows=\"3\"\r\n          className=\"form-control text-light\"\r\n          placeholder=\"Write a description\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary btn-block m-2\">\r\n        {currentId === \"\" ? \"Save\" : \"Update\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LinkForm;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport LinkForm from \"./LinkForm\";\r\nimport { db } from \"../firebase\";\r\n\r\n\r\nconst Links = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [currentId, setCurrentId] = useState('')\r\n\r\n  const addOrEditLink = async (linkObject) => {\r\n    \r\n    try {\r\n        if (currentId === \"\") {\r\n          await db.collection(\"links\").doc().set(linkObject);\r\n          toast(\"New Link Added\", {\r\n            type: \"success\",\r\n          });\r\n        } else {\r\n          await db.collection(\"links\").doc(currentId).update(linkObject);\r\n          toast(\"Link Updated Successfully\", {\r\n            type: \"info\",\r\n          });\r\n          setCurrentId(\"\");\r\n        }\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n  };\r\n\r\n  const onDeleteLink = async (id) => {\r\n    if (window.confirm(\"are you sure you want to delete this link?\")) {\r\n      await db.collection(\"links\").doc(id).delete();\r\n      toast(\"Link Removed Successfully\", {\r\n        type: \"error\",\r\n        autoClose: 2000\r\n      });\r\n    }\r\n  };\r\n\r\n  const getLinks = async () => {\r\n    db.collection(\"links\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setLinks(docs);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLinks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"col-md-8 p-2 mx-auto\">\r\n        <LinkForm {...{addOrEditLink, currentId, links}}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-md-8 p-2 mx-auto\">\r\n        {links.map((link) => (\r\n          <div className=\"card mb-1\" key={link.id}>\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h4>{link.name}</h4>\r\n                <div>\r\n                  <i\r\n                    className=\"material-icons text-danger\"\r\n                    onClick={() => onDeleteLink(link.id)}\r\n                  >\r\n                    close\r\n                  </i>\r\n\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={()=>setCurrentId(link.id)}\r\n                  >\r\n                    create\r\n                  </i>\r\n                </div>\r\n              </div>\r\n              <p>{link.description}</p>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                Go to website\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Links from \"./components/Links\";\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nfunction App() {\n  return (\n    <div className=\"container p-4\">\n      <div className=\"row\">\n        \n        <Links />\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './firebase';\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}